import numpy as np
import matplotlib.pyplot as plt
import math as mt

def forward_euler_2nd_order(f, y0, v0, t0, tn, h):
    n = int((tn - t0) / h) + 1 
    t = np.linspace(t0, tn, n)
    y = np.zeros(n)
    v = np.zeros(n)
    
    y[0] = y0
    v[0] = v0
    
    for i in range(n - 1):
        v[i + 1] = v[i] + h * f(t[i], y[i], v[i])
        y[i + 1] = y[i] + h * v[i]
    
    return t, y, v
def f(t, y, v):
    return -(32.17/2)*mt.sin(y)
y0 = np.pi/6  
v0 = 0.0  
t0 = 0.0  
tn = 2.0 
h = 0.1  
t, y, v = forward_euler_2nd_order(f, y0, v0, t0, tn, h)
plt.plot(t, y, label="y(t)")
plt.plot(t, v, label="y'(t)", linestyle='dashed')
plt.xlabel("Time t")
plt.ylabel("Values")
plt.legend()
plt.title("Forward Euler Method for Second Order ODE")
plt.grid()
plt.show()
